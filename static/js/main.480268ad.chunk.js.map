{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","_useState","useState","_useState2","Object","slicedToArray","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","value","react_default","a","createElement","className","onSubmit","preventDefault","id","Math","floor","random","text","edit","Fragment","type","placeholder","onChange","ref","Todo","_ref","todos","completeTodo","removeTodo","updateTodo","setEdit","components_TodoForm","map","todo","index","isComplete","key","onClick","index_esm","ti_index_esm","TodoList","setTodos","console","log","test","newTodos","concat","toConsumableArray","components_Todo","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.480268ad.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState('')\r\n\r\nconst inputRef = useRef(null)\r\n\r\nuseEffect(() => {\r\n    inputRef.current.focus()\r\n})\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value);\r\n}\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n   \r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input,\r\n    })\r\n    \r\n    setInput('')\r\n};\r\n\r\n  return (\r\n    <form className='todo-form' onSubmit={handleSubmit}>\r\n        {props.edit ?( \r\n        <>\r\n        <input \r\n            className='todo-input' \r\n            type='text'\r\n            placeholder='Update your item'\r\n            value={input} \r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n        />\r\n        <button className='todo-button'>Update</button> \r\n        </>\r\n        ):(\r\n        <>\r\n        <input \r\n            className='todo-input' \r\n            type='text'\r\n            placeholder='Add a todo'\r\n            value={input} \r\n            onChange={handleChange}\r\n            ref={inputRef}\r\n        />\r\n        <button className='todo-button'>\r\n            Add Todo\r\n        </button>\r\n        </>\r\n        )}\r\n        \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm","import React, {useState} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction Todo ({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n     \r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete': 'todo-row'} key={index}>\r\n           <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}   \r\n           </div>\r\n           <div className='icons'>\r\n              <RiCloseCircleLine \r\n                onClick={() => removeTodo(todo.id)}\r\n                className='delete-icon'\r\n              /> \r\n              <TiEdit \r\n                onClick={() => setEdit({id: todo.id, value: todo.text})}\r\n                className='edit-icon'\r\n              />              \r\n           </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo","import React,{useState} from 'react'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n        \r\n        setTodos(newTodos)\r\n        \r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue: item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo =>{\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n    console.log(todos)\r\n  return (\r\n    <div>\r\n       <h1>What's up for today?</h1>\r\n       <TodoForm onSubmit={addTodo} />\r\n       <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}